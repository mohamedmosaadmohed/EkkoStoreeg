@model IEnumerable<Region>
@{
    ViewBag.pageTitle = "City Management";
    ViewBag.CardTitle = "View City";
}

<section class="section">
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                    <div class="d-flex justify-content-between align-items-center mb-2">
                        <h5 class="card-title">City Table</h5>
                        <a class="btn btn-success me-3" data-bs-toggle="modal" data-bs-target="#createCityModal">
                            <i class="bi bi-plus"></i>
                        </a>
                    </div>
                    <div class="table-responsive">
                        <table id="mytable" class="table table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th>Update</th>
                                    <th>Delete</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>
<!--Create-->
<div class="modal fade" id="createCityModal" tabindex="-1" aria-labelledby="createRegionLabel" 
aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="createCityForm">
                    @Html.AntiForgeryToken()
                    <div id="validationSummary" class="alert alert-danger d-none"></div>
                    <div class="mb-3">
                        <label for="regionName" class="form-label">Name</label>
                        <input type="text" class="form-control" id="cityName" name="Name" required>
                    </div>
                    <input type="hidden" id="regionId" name="RegionId" value="" />
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Create</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<!--Update-->
<div class="modal fade" id="updateCityModal" tabindex="-1" aria-labelledby="updateCityLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="updateCityForm">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="updateCityId" name="id" />
                    <div id="updateValidationSummary" class="alert alert-danger d-none"></div>
                    <div class="mb-3">
                        <label for="updateCityName" class="form-label">Name</label>
                        <input type="text" class="form-control" id="updateCityName" name="Name" required>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Update</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script type="text/javascript">
        var regionId = @Html.Raw(TempData["RegionId"] ?? "null");
        $(document).ready(function () {
            loaddata();
            // Set the regionId to the hidden input field when the modal is shown
            $('#createCityModal').on('show.bs.modal', function () {
                $('#regionId').val(regionId);
            });
        });
        function loaddata() {
            dtble = $("#mytable").DataTable({
                "ajax": {
                    "url": "/Admin/City/GetData",
                    "type": "GET",
                    "data": { "regionId": regionId }
                },
                "columns": [
                    { "data": "name" },
                    {
                        "data": "id",
                        "render": function (data) {
                            return `<a href="#" class="btn btn-primary btn-update-city" data-id="${data}" class="btn btn-primary"><i class="bi bi-pencil-square"></i></a>`;
                        },
                        "orderable": false
                    },
                    {
                        "data": "id",
                        "render": function (data) {
                            return `<a onClick="DeleteItem('/Admin/City/DeleteCity/${data}')" class="btn btn-danger"><i class="bi bi-trash"></i></a>`;
                        },
                        "orderable": false
                    },
                ]
            });
        }


        function DeleteItem(url) {
            // Set text based on language direction
            var swalTitle = "Are you sure?";
            var swalText = "You won't be able to revert this!";
            var confirmButtonText = "Yes, delete it!";
            var cancelButtonText = "Cancel";
            var deletedTitle = "Deleted!";
            var deletedText = "Your product has been deleted.";

            Swal.fire({
                title: swalTitle,
                text: swalText,
                icon: "warning",
                showCancelButton: true,
                confirmButtonColor: "#3085d6",
                cancelButtonColor: "#d33",
                confirmButtonText: confirmButtonText,
                cancelButtonText: cancelButtonText
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: url,
                        type: "DELETE",
                        success: function (data) {
                            if (data.success) {
                                dtble.ajax.reload();
                                toastr.success(data.message);
                            } else {
                                toastr.error(data.message);
                            }
                        }
                    });
                    Swal.fire({
                        title: deletedTitle,
                        text: deletedText,
                        icon: "success"
                    });
                }
            });
        }
    </script>
    <script>
        // Create
        $(document).ready(function () {
            $("#createCityForm").on("submit", function (e) {
                e.preventDefault();
                var formData = new FormData(document.getElementById('createCityForm'));

                $.ajax({
                    url: '@Url.Action("Create", "City")',
                    type: 'POST',
                    processData: false,
                    contentType: false,
                    data: formData,
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        if (response.success) {
                            $('#createCityModal').modal('hide');
                            toastr.success(response.message);
                            dtble.ajax.reload();
                        }
                    },
                    error: function (xhr, status, error) {
                        toastr.error("An error occurred");
                    }
                });
            });
        });

        // Update
        $(document).ready(function () {
            $(document).on("click", ".btn-update-city", function () {
                var cityId = $(this).data("id");
                $.ajax({
                    url: '@Url.Action("GetCityById", "City")',
                    type: 'GET',
                    data: { id: cityId },
                    success: function (data) {
                        $("#updateCityId").val(data.id);
                        $("#updateCityName").val(data.name);

                        $("#updateCityModal").modal("show");
                    },
                    error: function () {
                        toastr.error("An error occurred");
                    }
                });
            });

            $("#updateCityForm").on("submit", function (e) {
                e.preventDefault();
                var formData = new FormData(document.getElementById('updateCityForm'));

                $.ajax({
                    url: '@Url.Action("Update", "City")',
                    type: 'POST',
                    processData: false,
                    contentType: false,
                    data: formData,
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (response) {
                        if (response.success) {
                            $('#updateCityModal').modal('hide');
                            toastr.success(response.message);
                            dtble.ajax.reload();
                        }
                    },
                    error: function (xhr, status, error) {
                        toastr.error("An error occurred");
                    }
                });
            });
        });
    </script>
}